From 731a68951986fd2ffacf9f28f19192b4d96ca961 Mon Sep 17 00:00:00 2001
From: Ryan Lortie <desrt@desrt.ca>
Date: Thu, 1 Aug 2013 23:06:00 +0200
Subject: [PATCH] gtkicontheme: check for GdkPixbuf first

We checked for G_IS_LOADABLE_ICON() before GDK_IS_PIXBUF().

Since we made GdkPixbuf implement GLoadableIcon, the special case for
pixbufs is never used, and the much much slower GLoadableIcon path is
taken instead.  Move the GdkPixbuf one to be first to fix that.

https://bugzilla.gnome.org/show_bug.cgi?id=705320
---
 gtk/gtkicontheme.c | 68 +++++++++++++++++++++++++++---------------------------
 1 file changed, 34 insertions(+), 34 deletions(-)

Index: gtk+3.0-3.8.2/gtk/gtkicontheme.c
===================================================================
--- gtk+3.0-3.8.2.orig/gtk/gtkicontheme.c	2013-08-01 18:06:49.566568309 -0400
+++ gtk+3.0-3.8.2/gtk/gtkicontheme.c	2013-08-01 18:07:40.894566402 -0400
@@ -4881,7 +4881,40 @@
   g_return_val_if_fail (GTK_IS_ICON_THEME (icon_theme), NULL);
   g_return_val_if_fail (G_IS_ICON (icon), NULL);
 
-  if (G_IS_LOADABLE_ICON (icon))
+  if (GDK_IS_PIXBUF (icon))
+    {
+      GdkPixbuf *pixbuf;
+
+      pixbuf = GDK_PIXBUF (icon);
+
+      if ((flags & GTK_ICON_LOOKUP_FORCE_SIZE) != 0)
+        {
+          gint width, height, max;
+          gdouble scale;
+          GdkPixbuf *scaled;
+
+          width = gdk_pixbuf_get_width (pixbuf);
+          height = gdk_pixbuf_get_height (pixbuf);
+          max = MAX (width, height);
+          scale = (gdouble) size * scale / (gdouble) max;
+
+          scaled = gdk_pixbuf_scale_simple (pixbuf,
+                                            0.5 + width * scale,
+                                            0.5 + height * scale,
+                                            GDK_INTERP_BILINEAR);
+
+          info = gtk_icon_info_new_for_pixbuf (icon_theme, scaled);
+
+          g_object_unref (scaled);
+        }
+      else
+        {
+          info = gtk_icon_info_new_for_pixbuf (icon_theme, pixbuf);
+        }
+
+      return info;
+    }
+  else if (G_IS_LOADABLE_ICON (icon))
     {
       info = icon_info_new ();
       info->loadable = G_LOADABLE_ICON (g_object_ref (icon));
@@ -4944,39 +4977,6 @@
       else
         return NULL;
     }
-  else if (GDK_IS_PIXBUF (icon))
-    {
-      GdkPixbuf *pixbuf;
-
-      pixbuf = GDK_PIXBUF (icon);
-
-      if ((flags & GTK_ICON_LOOKUP_FORCE_SIZE) != 0)
-	{
-	  gint width, height, max;
-	  gdouble scale;
-	  GdkPixbuf *scaled;
-
-	  width = gdk_pixbuf_get_width (pixbuf);
-	  height = gdk_pixbuf_get_height (pixbuf);
-	  max = MAX (width, height);
-	  scale = (gdouble) size / (gdouble) max;
-
-	  scaled = gdk_pixbuf_scale_simple (pixbuf,
-					    0.5 + width * scale,
-					    0.5 + height * scale,
-					    GDK_INTERP_BILINEAR);
-
-	  info = gtk_icon_info_new_for_pixbuf (icon_theme, scaled);
-
-	  g_object_unref (scaled);
-	}
-      else
-	{
-	  info = gtk_icon_info_new_for_pixbuf (icon_theme, pixbuf);
-	}
-
-      return info;
-    }
 
   return NULL;
 }
